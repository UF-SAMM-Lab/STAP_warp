<launch>
    <!-- <arg name="test" default="1" /> -->
    <arg name="planning_time" default="5" />
    <arg name="debug" default="false" />
    <arg name="avoid_time_offset" default="0.0" />
    <arg name="num_tests" default="1" />
    <arg name="stap_offset" default="0" />
    <arg name="test_num" default="1" />
    <rosparam file="$(find stap_warp)/config/sharework/tests.yaml" />
    <rosparam file="$(find stap_warp)/config/human_config.yaml" />
    <rosparam file="$(find stap_warp)/config/avoid_config.yaml" />
    <rosparam file="$(find stap_warp)/config/sharework/stap_config.yaml" />
    <param  name="stap_offset" value="$(arg stap_offset)"/>
    <param  name="planning_time" value="$(arg planning_time)"/>
    <param  name="num_tests" value="$(arg num_tests)"/>
    <param  name="plan_group" value="manipulator"/>
    <param  name="ctrl_ns" value="manipulator"/>
    <param  name="stap_warp/base_frame" value="world"/>
    <param  name="stap_warp/tool_frame" value="open_tip"/>
    <param  name="sequence_test/planning_time" value="5.0"/>
    <param  name="sequence_test/workcell_transform" value="0.0,-0.0,1.0,0.707,0,0,-0.707"/>
    <arg unless="$(arg debug)" name="launch_prefix" value="" />
    <arg     if="$(arg debug)" name="launch_prefix"
           value="gdb --ex run --args" /> 
    <arg name="simulated" default="false" />
    <arg name="cell" default="sharework"/>
    <param  name="sequence_test/cell" value="$(arg cell)"/>

    <rosparam file="$(find stap_warp)/config/sharework/sequence.yaml" command="load"/>

    <rosparam file="$(find sharework_cembre_safety)/config/thor_safety.yaml" command="load"/>
    <include file="$(find sharework_cembre_safety)/launch/safety.launch"/>
    <include file="$(find robot_human_distance_checker)/launch/dist_check_ur.launch"/>
    <include file="$(find human_prediction)/launch/predict_service.launch"/>
    <!-- <include file="$(find velocity_scaling_iso15066)/launch/publish_unscaled_joint_target.launch"/> -->
    <node name="sw_grip_int" pkg="stap_warp" type="sw_grip_int" respawn="false" output="screen" required="true" launch-prefix="$(arg launch_prefix)"/>
    <node name="sequence_test" pkg="stap_warp" type="sequence_test" respawn="false" output="screen" required="true" launch-prefix="$(arg launch_prefix)">
        <param name="simulated" value="$(arg simulated)"/>
        <param name="test_num" value="$(arg test_num)"/>
    </node> 
    <!-- launch-prefix="gdb -ex run  -args"> -->
    <!-- "gdb -.-ex run -.-args"  -->
</launch>